# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `syntax_tree-disable_ternary` gem.
# Please instead update this file by running `bin/tapioca gem syntax_tree-disable_ternary`.

# source://syntax_tree-disable_ternary//lib/syntax_tree/disable_ternary.rb#3
module SyntaxTree
  class << self
    # source://syntax_tree/6.1.1/lib/syntax_tree.rb#59
    def format(source, maxwidth = T.unsafe(nil), base_indentation = T.unsafe(nil), options: T.unsafe(nil)); end

    # source://syntax_tree/6.1.1/lib/syntax_tree.rb#75
    def format_file(filepath, maxwidth = T.unsafe(nil), base_indentation = T.unsafe(nil), options: T.unsafe(nil)); end

    # source://syntax_tree/6.1.1/lib/syntax_tree.rb#85
    def format_node(source, node, maxwidth = T.unsafe(nil), base_indentation = T.unsafe(nil), options: T.unsafe(nil)); end

    # source://syntax_tree/6.1.1/lib/syntax_tree.rb#102
    def index(source); end

    # source://syntax_tree/6.1.1/lib/syntax_tree.rb#109
    def index_file(filepath); end

    # source://syntax_tree/6.1.1/lib/syntax_tree.rb#114
    def mutation; end

    # source://syntax_tree/6.1.1/lib/syntax_tree.rb#121
    def parse(source); end

    # source://syntax_tree/6.1.1/lib/syntax_tree.rb#128
    def parse_file(filepath); end

    # source://syntax_tree/6.1.1/lib/syntax_tree.rb#134
    def read(filepath); end

    # source://syntax_tree/6.1.1/lib/syntax_tree.rb#149
    def register_handler(extension, handler); end

    # source://syntax_tree/6.1.1/lib/syntax_tree.rb#155
    def search(source, query, &block); end

    # source://syntax_tree/6.1.1/lib/syntax_tree.rb#164
    def search_file(filepath, query, &block); end
  end
end

# source://syntax_tree-disable_ternary//lib/syntax_tree/disable_ternary.rb#4
module SyntaxTree::Ternaryable
  class << self
    # source://syntax_tree-disable_ternary//lib/syntax_tree/disable_ternary.rb#6
    def call(q, node); end

    private

    # source://syntax_tree/6.1.1/lib/syntax_tree/node.rb#6291
    def ternaryable?(statement); end
  end
end
