# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rspec-html-matchers` gem.
# Please instead update this file by running `bin/tapioca gem rspec-html-matchers`.

# RSpec global configuration:
#
#   RSpec.configure do |config|
#     config.include RSpecHtmlMatchers
#   end
#
# RSpec per-test configuration
#
#   RSpec.describe "my view spec" do
#     include RSpecHtmlMatchers
#
#     it "has tags" do
#       expect(rendered).to have_tag('div')
#     end
#   end
#
# Cucumber configuration:
#
#   World RSpecHtmlMatchers
#
# source://rspec-html-matchers//lib/rspec-html-matchers/nokogiri_regexp_helper.rb#4
module RSpecHtmlMatchers
  # @raise [StandardError]
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#87
  def but_without_text(text); end

  # tests whether tag have any content inside
  #
  # @example
  #   expect('<div></div>').to have_empty_tag('div') # success
  #   expect('<div>hi</div>').to have_empty_tag('div') # fail
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#73
  def have_empty_tag(tag, options = T.unsafe(nil)); end

  # form assertion
  #
  # it is a shortcut to
  #   have_tag 'form', :with => { :action => action_url, :method => method ... }
  #
  # @see #have_tag
  # @yield block with with_<field>, see below
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#124
  def have_form(action_url, method, options = T.unsafe(nil), &block); end

  # tag assertion, this is the core of functionality, other matchers are shortcuts to this matcher
  #
  # @example
  #   expect(rendered).to have_tag('div')
  #   expect(rendered).to have_tag('h1.header')
  #   expect(rendered).to have_tag('div#footer')
  #   expect(rendered).to have_tag('input#email', :with => { :name => 'user[email]', :type => 'email' } )
  #   expect(rendered).to have_tag('div', :count => 3)            # matches exactly 3 'div' tags
  #   expect(rendered).to have_tag('div', :count => 3..7)         # shortcut for have_tag('div', :minimum => 3, :maximum => 7)
  #   expect(rendered).to have_tag('div', :minimum => 3)          # matches more(or equal) than 3 'div' tags
  #   expect(rendered).to have_tag('div', :maximum => 3)          # matches less(or equal) than 3 'div' tags
  #   expect(rendered).to have_tag('p', :text => 'some content')  # will match "<p>some content</p>"
  #   expect(rendered).to have_tag('p', :text => /some content/i) # will match "<p>sOme cOntEnt</p>"
  #   expect(rendered).to have_tag('textarea', :with => {:name => 'user[description]'}, :text => "I like pie")
  #   expect("<html>
  #   <body>
  #   <h1>some html document</h1>
  #   </body>
  #   </html>").to have_tag('body') { with_tag('h1', :text => 'some html document') }
  #   expect('<div class="one two">').to have_tag('div', :with => { :class => ['two', 'one'] })
  #   expect('<div class="one two">').to have_tag('div', :with => { :class => 'two one' })
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param tag [String] css selector for tag you want to match, e.g. 'div', 'section#my', 'article.red'
  # @param options [Hash] options hash(see below)
  # @yield block where you should put with_tag, without_tag and/or other matchers
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#62
  def have_tag(tag, options = T.unsafe(nil), &block); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#328
  def with_button(text, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#256
  def with_checkbox(name, value = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#199
  def with_date_field(date_field_type, name = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#155
  def with_email_field(name, value = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#228
  def with_file_field(name, value = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#135
  def with_hidden_field(name, value = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#175
  def with_number_field(name, value = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#296
  def with_option(text, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#217
  def with_password_field(name, value = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#266
  def with_radio_button(name, value); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#185
  def with_range_field(name, min, max, options = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#276
  def with_select(name, options = T.unsafe(nil), &block); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#354
  def with_submit(value); end

  # with_tag matcher
  #
  # @note this should be used within block of have_tag matcher
  # @see #have_tag
  # @yield block where you should put other with_tag or without_tag
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#102
  def with_tag(tag, options = T.unsafe(nil), &block); end

  # @raise [StandardError]
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#77
  def with_text(text); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#238
  def with_text_area(name); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#145
  def with_text_field(name, value = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#165
  def with_url_field(name, value = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#341
  def without_button(text, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#261
  def without_checkbox(name, value = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#208
  def without_date_field(date_field_type, name = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#160
  def without_email_field(name, value = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#233
  def without_file_field(name, value = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#140
  def without_hidden_field(name, value = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#180
  def without_number_field(name, value = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#312
  def without_option(text, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#223
  def without_password_field(name, value = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#271
  def without_radio_button(name, value); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#190
  def without_range_field(name, min = T.unsafe(nil), max = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#286
  def without_select(name, options = T.unsafe(nil), &block); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#360
  def without_submit(value); end

  # without_tag matcher
  #
  # @note this should be used within block of have_tag matcher
  # @see #have_tag
  # @yield block where you should put other with_tag or without_tag
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#112
  def without_tag(tag, options = T.unsafe(nil), &block); end

  # @raise [StandardError]
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#87
  def without_text(text); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#247
  def without_text_area(name); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#150
  def without_text_field(name, value = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#170
  def without_url_field(name, value = T.unsafe(nil)); end

  private

  # form_tag in method name name mean smth. like input, submit, tags that should appear in a form
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#381
  def form_tag_options(form_tag_type, form_tag_name, form_tag_value = T.unsafe(nil)); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#368
  def should_have_input(options); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#374
  def should_not_have_input(options); end

  # source://rspec-html-matchers//lib/rspec-html-matchers.rb#388
  def within_nested_tag(&block); end
end

# source://rspec-html-matchers//lib/rspec-html-matchers.rb#197
RSpecHtmlMatchers::DATE_FIELD_TYPES = T.let(T.unsafe(nil), Array)

# @api
# @private
#
# source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#9
class RSpecHtmlMatchers::HaveTag
  # @api
  # @return [HaveTag] a new instance of HaveTag
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#45
  def initialize(tag, options = T.unsafe(nil), &block); end

  # @api
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#73
  def current_scope; end

  # @api
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#104
  def description; end

  # @api
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#71
  def failure_message; end

  # @api
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#72
  def failure_message_when_negated; end

  # @api
  # @return [Boolean]
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#75
  def matches?(src, &block); end

  private

  # @api
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#119
  def classes_to_selector(classes); end

  # @api
  # @return [Boolean]
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#263
  def count_is_range_but_no_min?; end

  # @api
  # @return [Boolean]
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#137
  def count_right?; end

  # @api
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#117
  def document; end

  # @api
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#285
  def match_failed!(message, *args); end

  # @api
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#280
  def match_succeeded!(message, *args); end

  # @api
  # @return [Boolean]
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#178
  def maybe_empty?; end

  # @api
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#116
  def options; end

  # @api
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#268
  def organize_options!; end

  # @api
  # @return [Boolean]
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#170
  def proper_content?; end

  # @api
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#115
  def tag; end

  # @api
  # @return [Boolean]
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#128
  def tag_presents?; end

  # @api
  # @return [Boolean]
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#186
  def text_right?; end

  # @api
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#239
  def validate_count_presence!; end

  # @api
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#247
  def validate_count_when_set_min_max!; end

  # @api
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#253
  def validate_count_when_set_range!; end

  # here is a demo:
  #   irb(main):009:0> Nokogiri::HTML('<p>asd</p>').xpath('//html')
  #   => [#<Nokogiri::XML::Element:0x3fea02cd3f58 name="html" children=[#<Nokogiri::XML::Element:0x3fea02cd37c4 name="body" children=[#<Nokogiri::XML::Element:0x3fea02cd34e0 name="p" children=[#<Nokogiri::XML::Text:0x3fea02cd3134 "asd">]>]>]>]
  #   irb(main):010:0> Nokogiri::HTML('<p>asd</p>').xpath('//body')
  #   => [#<Nokogiri::XML::Element:0x3fea02ce3df4 name="body" children=[#<Nokogiri::XML::Element:0x3fea02ce3a70 name="p" children=[#<Nokogiri::XML::Text:0x3fea02ce350c "asd">]>]>]
  #   irb(main):011:0> Nokogiri::HTML('<p>asd</p>').xpath('//p')
  #   => [#<Nokogiri::XML::Element:0x3fea02cf3754 name="p" children=[#<Nokogiri::XML::Text:0x3fea02cf2f98 "asd">]>]
  #   irb(main):012:0> Nokogiri::HTML('<p>asd</p>').xpath('//a')
  #   => []
  #
  # @api
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#226
  def validate_html_body_tags!; end

  # @api
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#209
  def validate_options!; end

  # @api
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#232
  def validate_text_options!; end
end

# @api
#
# source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#10
RSpecHtmlMatchers::HaveTag::DESCRIPTIONS = T.let(T.unsafe(nil), Hash)

# @api
#
# source://rspec-html-matchers//lib/rspec-html-matchers/have_tag.rb#15
RSpecHtmlMatchers::HaveTag::MESSAGES = T.let(T.unsafe(nil), Hash)

# for nokogiri regexp matching
#
# @api
# @private
#
# source://rspec-html-matchers//lib/rspec-html-matchers/nokogiri_regexp_helper.rb#8
class RSpecHtmlMatchers::NokogiriRegexpHelper
  # @api
  # @return [NokogiriRegexpHelper] a new instance of NokogiriRegexpHelper
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/nokogiri_regexp_helper.rb#9
  def initialize(regex); end

  # @api
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/nokogiri_regexp_helper.rb#13
  def regexp(node_set); end
end

# @api
# @private
#
# source://rspec-html-matchers//lib/rspec-html-matchers/nokogiri_text_helper.rb#7
class RSpecHtmlMatchers::NokogiriTextHelper
  # @api
  # @return [NokogiriTextHelper] a new instance of NokogiriTextHelper
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/nokogiri_text_helper.rb#10
  def initialize(text, squeeze_text = T.unsafe(nil)); end

  # @api
  #
  # source://rspec-html-matchers//lib/rspec-html-matchers/nokogiri_text_helper.rb#15
  def content(node_set); end
end

# @api
#
# source://rspec-html-matchers//lib/rspec-html-matchers/nokogiri_text_helper.rb#8
RSpecHtmlMatchers::NokogiriTextHelper::NON_BREAKING_SPACE = T.let(T.unsafe(nil), String)
